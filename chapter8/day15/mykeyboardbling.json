// 将键绑定放在此文件中以覆盖默认值auto[]
// 之前的快捷键，以后需要用到的话就看一下
[
    {
        "key": "end",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "end",
        "command": "-cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+i",
        "command": "-extension.fileheader",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.quickOpenTerm"
    },
    {
        "key": "shift+alt+q",
        "command": "openInTerminal"
    },
    {
        "key": "shift+alt+n",
        "command": "workbench.action.terminal.new"
    },
    {
        "key": "ctrl+shift+oem_3",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "alt+g",
        "command": "workbench.action.tasks.runTask",
        "args": "git",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+i",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+-",
        "command": "type",
        "args": {
            "text": " <- "
        },
        "when": "editorTextFocus"
    },
    {
        "key": "alt+d",
        "command": "python.execInTerminal"
    },
    {
        "key": "ctrl+alt+i",
        "command": "extension.fileheader"
    },
    {
        "key": "alt+s",
        "command": "r.runSource",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "ctrl+shift+s",
        "command": "-r.runSource",
        "when": "editorTextFocus && editorLangId == 'r'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+alt+r",
        "command": "workbench.action.reloadWindow"
    },
    {
        "key": "shift+alt+u",
        "command": "-extension.updateSettings"
    },
    {
        "key": "shift+alt+d",
        "command": "-extension.downloadSettings"
    },
    {
        "key": "ctrl+shift+m",
        "command": "workbench.view.remote"
    },
    {
        "key": "ctrl+alt+m",
        "command": "workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "shift+enter",
        "command": "-jupyter.execSelectionInteractive",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.ownsSelection && !findInputFocussed && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "alt+enter",
        "command": "-jupyter.runcurrentcellandaddbelow",
        "when": "editorTextFocus && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
    },
    {
        "key": "alt+enter",
        "command": "-notebook.cell.executeAndInsertBelow",
        "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
    },
    {
        "key": "ctrl+enter",
        "command": "-jupyter.runcurrentcell",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "-notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "shift+enter",
        "command": "notebook.cell.executeAndFocusContainer",
        "when": "notebookCellListFocused || editorTextFocus && inputFocus && notebookEditorFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "-notebook.cell.executeAndFocusContainer",
        "when": "notebookCellListFocused || editorTextFocus && inputFocus && notebookEditorFocused"
    },
    {
        "key": "shift+enter",
        "command": "-jupyter.runcurrentcelladvance",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
    },
    {
        "key": "ctrl+oem_1 s",
        "command": "-jupyter.insertCellBelowPosition",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+oem_1 b",
        "command": "-jupyter.insertCellBelow",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "alt+enter",
        "command": "notebook.cell.joinBelow",
        "when": "notebookEditorFocused"
    },
    {
        "key": "alt+win+j",
        "command": "-notebook.cell.joinBelow",
        "when": "notebookEditorFocused"
    },
    {
        "key": "alt+enter",
        "command": "notebook.cell.executeAndInsertBelow"
    },
    {
        "key": "shift+alt+oem_plus",
        "command": "cSpell.addIssuesToDictionary"
    },
    {
        "key": "alt+oem_comma",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "alt+oem_period",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "ctrl+shift+oem_2",
        "command": "jupyter.execSelectionInteractive"
    }
]